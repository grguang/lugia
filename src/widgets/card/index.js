import  React from 'react';
     import {Anchor,Grid} from '@lugia/lugia-web';
     import EditTables from '../../edit-table'; 
     import FooterNav from '../../footer-nav';
     import PageNavHoC from '../../common/PageNavHoC';
     import widgetrouter from '../../router/widgetrouter';
     import CARD from '@lugia/lugia-web/dist/card/lugia.card.zh-CN.json';
        import Demo from '../code-box';
        import Title from '../code-box/Title';
         const BaseCard =  require('./BaseCard').default;  const ShadowCard =  require('./ShadowCard').default;  const TypeCard =  require('./TypeCard').default;  const ComboCard =  require('./ComboCard').default;  const TabsCard =  require('./TabsCard').default;  
        
        const { Link } = Anchor;
        const { Row,Col } = Grid;
        
      export default PageNavHoC(widgetrouter, class ComDemo extends React.Component {
            render(){
                const {next, prev, isMobile = false} = this.props;
                const span = isMobile ? 24 : 20;
                const style = isMobile ? {} : {paddingRight: '50px'};
                return(
                    <Row>
                        <Col span={span}>
                          <div style={style}>
                              <Title title={'卡片'} subTitle={'Card'} desc={'卡片容器，可添加文字、列表、图片等'} />
                              <Demo title={'卡片基本用法'} titleID={'card-0'} code={<code>{ `import React from \'react\';\nimport { Card, Theme } from \'@lugia/lugia-web\';\nimport styled from \'styled-components\';\n\nconst Wrapper = styled.div\`\n  margin-top: 50px;\n  display: inline-block;\n\`;\nconst Operation = styled.div\`\n  color: #4d63ff;\n\`;\nexport default class BaseCard extends React.Component<any, any> {\n  click = () => {};\n  render() {\n    return (\n      <Wrapper>\n        <Card\n          title={\'This is title\'}\n          description={\'This is description\'}\n          shadow={\'always\'}\n          operation={\n            <Operation  onClick={this.click}>\n              操作\n            </Operation>\n          }\n        />\n      </Wrapper>\n    );\n  }\n}\n`}</code>} desc={'可以添加标题,内容,操作等...'}  demo={<BaseCard />}></Demo><Demo title={'卡片阴影'} titleID={'card-1'} code={<code>{ `import React from \'react\';\nimport { Card, Theme } from \'@lugia/lugia-web\';\nimport styled from \'styled-components\';\nimport Widget from \'@lugia/lugia-web/dist/consts/index\';\nconst Wrapper = styled.div\`\n  display: inline-block;\n\`;\nconst CardWrapper = styled.div\`\n  display: inline-block;\n  padding-right: 10px;\n  padding-top: 10px;\n\`;\nconst Operation = styled.div\`\n  color: #4d63ff;\n\`;\nexport default class ShadowCard extends React.Component<any, any> {\n  render() {\n    const view = {\n      [Widget.Card]: {\n        width: 240,\n        height:100,\n      }\n    };\n    return (\n      <Theme config={view}>\n        <Wrapper>\n          <CardWrapper>\n            <Card\n              title={\'this is title\'}\n              description={\'this is description\'}\n              shadow={\'always\'}\n              operation={<Operation>操作</Operation>}\n            />\n          </CardWrapper>\n          <CardWrapper>\n            <Card\n              title={\'this is title\'}\n              description={\'this is description\'}\n              shadow={\'hover\'}\n              operation={<Operation>操作</Operation>}\n            />\n          </CardWrapper>\n          <CardWrapper>\n            <Card\n              title={\'this is title\'}\n              description={\'this is description\'}\n              shadow={\'never\'}\n              operation={<Operation>操作</Operation>}\n            />\n          </CardWrapper>\n        </Wrapper>\n      </Theme>\n    );\n  }\n}\n`}</code>} desc={'可以选着一直显示,和 hover 显示'}  demo={<ShadowCard />}></Demo><Demo title={'卡片风格'} titleID={'card-2'} code={<code>{ `import React from \"react\";\nimport { Card, Theme } from \"@lugia/lugia-web\";\nimport styled from \"styled-components\";\nimport Widget from \"@lugia/lugia-web/dist/consts\";\nimport avatarImgSrc from \"../../../public/card-avatar-circle.png\";\nimport cardImgSrc from \"../../../public/card.jpg\";\n\nconst Wrapper = styled.div\`\n  display: inline-block;\n\`;\nconst CardWrapper = styled.div\`\n  display: inline-block;\n  padding-right: 10px;\n  padding-top: 10px;\n\`;\nexport default class TypeCard extends React.Component<any, any> {\n  render() {\n    const imageVCard = {\n      [Widget.Card]: {\n        Container: {\n          normal: {\n            width: 200,\n            height: 220,\n            opacity: 0.8\n          }\n        },\n        CardImageContainer: {\n          normal: {\n            width: 200,\n            height: 150\n          }\n        },\n        CardImage: {\n          normal: {\n            width: 200,\n            height: 160\n          }\n        },\n        CardTitle: {\n          normal: {\n            width: 100,\n            height: 20\n          }\n        },\n        CardOperation: {\n          normal: {\n            color: \"blue\"\n          }\n        }\n      }\n    };\n    const imageHCard = {\n      [Widget.Card]: {\n        Container: {\n          normal: {\n            width: 360,\n            height: 180\n          }\n        },\n        CardImageContainer: {\n          normal: {\n            width: 160,\n            height: 100\n          }\n        },\n        CardImage: {\n          normal: {\n            width: 160,\n            height: 180\n          }\n        }\n      }\n    };\n    const avatarVCard = {\n      [Widget.Card]: {\n        Container: {\n          normal: {\n            width: 160,\n            height: 220\n          }\n        },\n        CardAvatarContainer: {\n          normal: {\n            width: 160,\n            height: 100,\n            padding: {\n              top: 20\n            }\n          }\n        },\n\n        CardAvatar: {\n          SrcAvatar: {\n            normal: {\n              width: 80,\n              height: 80\n            }\n          }\n        }\n      }\n    };\n    const avatarHCard = {\n      [Widget.Card]: {\n        Container: {\n          normal: {\n            width: 260,\n            height: 180\n          }\n        },\n\n        CardAvatar: {\n          SrcAvatar: {\n            normal: {\n              width: 80,\n              height: 80,\n              margin: {\n                top: 10\n              }\n            }\n          }\n        }\n      }\n    };\n    return (\n      <Wrapper>\n        <div style={{ display: \"inline-flex\" }}>\n          <CardWrapper>\n            <Theme config={avatarVCard}>\n              <Wrapper>\n                <Card\n                  type={\"avatar\"}\n                  title={\"This is title\"}\n                  description={\"This is description\"}\n                  imageOrientation={\"vertical\"}\n                  avatar={avatarImgSrc}\n                  shadow={\"hover\"}\n                />\n              </Wrapper>\n            </Theme>\n          </CardWrapper>\n\n          <CardWrapper>\n            <Theme config={imageVCard}>\n              <Card\n                viewClass={\"cardImage\"}\n                type={\"image\"}\n                imageOrientation={\"vertical\"}\n                title={\"This is title\"}\n                description={\"This is description\"}\n                image={cardImgSrc}\n                shadow={\"hover\"}\n              />\n            </Theme>\n          </CardWrapper>\n        </div>\n        <br />\n        <div style={{ display: \"inline-flex\" }}>\n          <CardWrapper>\n            <Theme config={avatarHCard}>\n              <Wrapper>\n                <Card\n                  type={\"avatar\"}\n                  title={\"This is title\"}\n                  description={\"This is description\"}\n                  avatar={avatarImgSrc}\n                  shadow={\"hover\"}\n                />\n              </Wrapper>\n            </Theme>\n          </CardWrapper>\n          <CardWrapper>\n            <Theme config={imageHCard}>\n              <Wrapper>\n                <Card\n                  type={\"image\"}\n                  title={\"This is title\"}\n                  imageOrientation={\"horizontal\"}\n                  description={\"This is description\"}\n                  image={cardImgSrc}\n                  shadow={\"hover\"}\n                />\n              </Wrapper>\n            </Theme>\n          </CardWrapper>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n`}</code>} desc={'可以添加图片,头像等 可以是水平风格,也可以是垂直风格'}  demo={<TypeCard />}></Demo><Demo title={'卡片组合用法'} titleID={'card-3'} code={<code>{ `import React from \"react\";\nimport styled from \"styled-components\";\nimport { Card, Theme } from \"@lugia/lugia-web\";\nimport Widget from \"@lugia/lugia-web/dist/consts\";\nconst CardContainer = styled.div\`\n  text-align: center;\n  width: 100%;\n  height: 100%;\n\`;\nconst Price = styled.div\`\n  text-align: center;\n  font-size: 16px;\n  color: #666;\n  margin-bottom: 26px;\n  width: 100%;\n\`;\nconst PriceNum = styled.div\`\n  text-align: center;\n  color: #4d63ff;\n  display: inline-block;\n\`;\nconst Buy = styled.button\`\n  position: absolute;\n  text-align: center;\n  font-size: 14px;\n  border-radius: 20px;\n  margin-top: 32px;\n  color: #fff;\n  bottom: 10%;\n  width: 80%;\n  background-color: #4d63ff;\n  height: 32px;\n  border: 2px solid #4d63ff;\n  left: 10%;\n\`;\nclass AmountCard extends React.Component<Object, Object> {\n  render() {\n    const price = \"9.88\";\n    let int = 0;\n    let decimals = 0;\n    if (price.indexOf(\".\") > 0) {\n      int = price.substring(0, price.indexOf(\".\"));\n      decimals = price.substring(price.indexOf(\".\"));\n    }\n    return (\n      <CardContainer>\n        <Price>{\"价格\"}</Price>\n        <PriceNum>\n          <PriceNum style={{ fontSize: 60 }}>{int}</PriceNum>\n          <PriceNum style={{ fontSize: 45 }}>{decimals}</PriceNum>\n        </PriceNum>\n        <Buy>{\"购买\"}</Buy>\n      </CardContainer>\n    );\n  }\n}\n\nexport default class ComboCard extends React.Component<Object, Object> {\n  render() {\n    const combo = {\n      [Widget.Card]: {\n        Container: {\n          normal: { width: 200, height: 220 }\n        }\n      }\n    };\n\n    return (\n      <Theme config={combo}>\n        <Card\n          viewClass={\"vertical\"}\n          type={\"combo\"}\n          content={<AmountCard />}\n          shadow={\"hover\"}\n        />\n      </Theme>\n    );\n  }\n}\n`}</code>} desc={'可以添加其他组件放在卡片内部'}  demo={<ComboCard />}></Demo><Demo title={'卡片组合用法'} titleID={'card-4'} code={<code>{ `import React from \'react\';\nimport { Card, Theme, Tabs } from \'@lugia/lugia-web\';\nimport styled from \'styled-components\';\nimport Widget from \"@lugia/lugia-web/dist/consts\";\nconst Wrapper = styled.div\`\n  display: inline-block;\n\`;\nconst TabsWrapper = styled.div\`\n  display: inline-block;\n  margin-left:20px;\n\`;\nconst Operation = styled.div\`\n  color: #4d63ff;\n\`;\n\nexport default class TabsCard extends React.Component<Object, Object> {\n  render() {\n\n    const tabsCard = {\n      [Widget.Card]: {\n        Container: {\n          normal: { width: 400, height: 240 },\n        },\n      },\n    };\n    const defaultData = [\n      {\n        title: \'Tab1\',\n        content: \'content of Tab1\'\n      },\n      {\n        title: \'Tab2\',\n        content: \'content of Tab2\'\n      },\n      {\n        title: \'Tab3\',\n        content: \'content of Tab3\'\n      }\n    ];\n    return (\n      <Theme config={tabsCard}>\n        <Wrapper>\n          <Card\n            operation={<Operation>操作</Operation>}\n            viewClass={\'register\'}\n            type={\'combo\'}\n            content={<TabsWrapper> <Tabs data={defaultData} /></TabsWrapper>}\n            shadow={\'hover\'}\n          />\n        </Wrapper>\n      </Theme>\n    );\n  }\n}\n`}</code>} desc={'可以添加其他组件放在卡片内部'}  demo={<TabsCard />}></Demo>
                              <EditTables dataSource={CARD} />
                              <FooterNav prev={prev} next={next} />
                            </div>
                        </Col>
                        {!isMobile && <Col span={4}>
                            <Anchor  slideType="line">
                                <Link title={'卡片基本用法'} href={'#card-0'} /><Link title={'卡片阴影'} href={'#card-1'} /><Link title={'卡片风格'} href={'#card-2'} /><Link title={'卡片组合用法'} href={'#card-3'} /><Link title={'卡片组合用法'} href={'#card-4'} />
                            </Anchor>
                        </Col>}
                    </Row>
                )
            }
         });   
        